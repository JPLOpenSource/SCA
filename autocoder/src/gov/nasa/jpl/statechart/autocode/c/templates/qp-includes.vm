##
## C Source file:  Implement the include statements
##
##* [SWC 2011.07.06] Updated legal declaration, disclaimer, and file info.
##* [SWC 2011.08.04] adapted from C++ patterns, added module prefix support
##* [SWC 2011.09.27] Implemented SMAP C naming convention for module items
##* [SWC 2012.01.24] Added macro to customize include lines
###############################################################################
##
## File comments
##
//===========================================================================
// This software contains Caltech/JPL confidential information.
//
// Copyright 2009-$year, by the California Institute of Technology.
// ALL RIGHTS RESERVED. United States Government Sponsorship Acknowledged.
// Any commercial use must be negotiated with the Office of Technology
// Transfer at the California Institute of Technology.
//
// This software may be subject to US export control laws and
// regulations. By accepting this document, the user agrees to comply
// with all applicable U.S. export laws and regulations, including the
// International Traffic and Arms Regulations, 22 C.F.R. 120-130 and the
// Export Administration Regulations, 15 C.F.R. 730-744. User has the
// responsibility to obtain export licenses, or other export authority as
// may be required before exporting such information to foreign countries
// or providing access to foreign persons.
//===========================================================================
//
//       File: ${modulePathPrefix}${smName}.c
// Created on: ${model.timestamp()}
//     Author: ${model.username()}@jpl.nasa.gov
// SCACmdLine: ${autocoder.cmdLineInvoked}
//
// This file was generated by the JPL StateChart Autocoders, which converts UML
// Statecharts, in XML, to a C variant of Miro Samek's Quantum Framework.
//===========================================================================
#*--*##if( $autocoder.executionTraceOn )
\#include <stdio.h>
\#include <string.h>
\#include <log_event.h>
#*--*##end
#*--*##customSourceIncludes()
\#include <${modulePathPrefix}${smName}.h>
\#include <${modulePathPrefix}${implName}.h>
##
## Include the headers for any submachine references by this state machine
##
#*--*##set( $submachines = $model.getSubmachines($sm) )
#*--*##if( !$submachines.isEmpty() )
## intentional blank line

#*----*##foreach( $submachine in $model.sort($submachines) )
\#include <${modulePathPrefix}#mapToTypeName($submachine,"").h>
\#include <${modulePathPrefix}#mapToTypeName($submachine,"impl").h>
#*----*##end
#*--*##end
## Add includes to all required signals headers, if applicable
#*--*##foreach( $signalPath in $model.getRequiredSignalPackagePaths($sm, $mapper) )
\#include <${signalPath}${mapper.mapToNamespacePrefix($signalPath.split("/"))}${sigFileName}.h>
#*--*##end
